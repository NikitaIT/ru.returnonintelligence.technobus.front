'use strict';

/**
 * Модуль карты
 * @param {object} function ( Инициализация карты
 */
$(function () {
  /**
   * Инициализация карты
   */
  function init() {
    var places = {
      metro: [59.853876, 30.321102],
      technopolis: [59.818043, 30.327938],
      metro1: [59.850127, 30.321772],
      routeCenter: [59.835681, 30.322253]
    };
    var from = places.metro,
        to = places.technopolis;
    var myMap = new ymaps.Map('map', {
      center: places.metro,
      zoom: 16
    }, {
      searchControlProvider: 'yandex#search'

    }),
        myPlacemark = new ymaps.Placemark(myMap.getCenter());

    myMap.geoObjects.add(myPlacemark);
    var myRoute = void 0;

    function addRoute(from, to) {
      ymaps.route([{
        point: from,
        type: 'viaPoint'
      }, to]).then(function (route) {
        myMap.geoObjects.add(myRoute = route);
      }, function (error) {
        alert('Возникла ошибка: ' + error.message);
      });
    };

    var routeButton = new ymaps.control.Button('<i class="fa fa-bus" style="color: dimgray"></i>');

    routeButton.events.add('select', function () {
      addRoute(from, to);
      myMap.setZoom(12);
      myMap.setCenter(places.routeCenter);
    }).add('deselect', function () {
      myRoute && myMap.geoObjects.remove(myRoute);
    });

    myMap.controls.add(routeButton, { float: 'left', maxWidth: 'auto' });

    myPlacemark.events.add('mouseenter', function (e) {
      // Ссылку на объект, вызвавший событие,
      // можно получить из поля 'target'.
      e.get('target').options.set('preset', 'islands#greenIcon');
    }).add('mouseleave', function (e) {
      e.get('target').options.unset('preset');
    });

    function changeRoute() {
      if (routeButton.isSelected()) {
        myRoute && myMap.geoObjects.remove(myRoute);
        addRoute(from, to);
      }
    };

    $(".from_technopolis").click(function () {
      myMap.setCenter(places.technopolis);
      myPlacemark.geometry.setCoordinates(myMap.getCenter());
      from = places.technopolis;
      to = places.metro1;
      changeRoute();
      myMap.setZoom(16);
    });

    $(".to_technopolis").click(function () {
      myMap.setCenter(places.metro);
      myPlacemark.geometry.setCoordinates(myMap.getCenter());
      from = places.metro;
      to = places.technopolis;
      changeRoute();
      myMap.setZoom(16);
    });
  }

  ymaps.ready(init);
});
"use strict";

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

/**
 * Модуль работы с гугл таблицами
 */
$(function () {
	var url = "https://docs.google.com/spreadsheet/pub?key=1VwgzSFxVRu2Z-9tvF8wimO2m3BmuW4ngcST5uGSRYRg&output=html";
	/**
  * Запрашивает с апи гугла таблицу по урлу
  * @param {string} url Адрес листа таблицы
  * @param {function} fun Что с ней делает
  */
	function googleSpreadsheetLoad(url, fun) {
		var googleSpreadsheet = new GoogleSpreadsheet();
		googleSpreadsheet.url(url);
		googleSpreadsheet.load(function (result) {
			console.log("\u0417\u0430\u0433\u0440\u0443\u0436\u0435\u043D \u043E\u0431\u044C\u0435\u043A\u0442:", result);
			fun(result);
		});
	}
	googleSpreadsheetLoad(url, function (result) {
		return addTableList(result, ".timetable__row__all", 0);
	});
	googleSpreadsheetLoad(url + "&gid=1453141125", function (result) {
		return addTableList(result, ".timetable__row__all", 1);
	});
	googleSpreadsheetLoad(url + "&gid=135110459", function (result) {
		return addInfoList(result, '.info-list');
	});
	/**
  * Добавляет информанию из таблицы
  * @param {object}   infoJSON  Обьект
  * @param {string} infoClass Класс в который добавляем
  */
	function addInfoList(infoJSON, infoClass) {
		var infoHtmlString = "";
		infoJSON.items.forEach(function (msg) {
			infoHtmlString += "<p class=\"info-list--elem\">\n\t\t\t\t\t\t\t\t\t<span class=\"info-list--elem__title\">\n\t\t\t\t\t\t\t\t\t\t" + msg.id + "\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t" + msg.info + "\n\t\t\t\t\t\t\t\t</p>";
		});
		$(infoClass).append(infoHtmlString);
	}
	/**
  * Add table list in timetable
  * @param   {object}   timetableJSON     Data
  * @param   {string} timetableRowClass Table DOM class
  * @param   {number} id                Table list number
  */
	function addTableList(timetableJSON, timetableRowClass, id) {
		console.log("f: addTableList(id=" + id + ", timetableJSON=", timetableJSON, ", timetableRowClass= " + timetableRowClass + ")");
		var minMap = {
			"b": "00",
			"c": "05",
			"d": 10,
			"e": 15,
			"f": 20,
			"g": 25,
			"h": 30,
			"i": 35,
			"j": 40,
			"k": 45,
			"l": 50,
			"m": 55
		};
		var timetableRowHtmlString = "<div class=\"timetable__row__current\" id=\"route" + id + "\">";
		timetableJSON.items.forEach(function (mins) {
			var minHtmlString = getMinHtmlString(mins);
			if (minHtmlString !== "") {
				timetableRowHtmlString += "<div class=\"timetable__row\">\n\t\t\t\t\t\t\t\t<div class=\"timetable__hover\">\n\t\t\t\t\t\t\t\t\t" + mins.id + "\t\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<hr class=\"line\"/>\n\t\t\t\t\t\t\t\t<div class=\"timetable__row--subrow\">\n\t\t\t\t\t\t\t\t\t" + minHtmlString + "\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>";
			}
		});
		timetableRowHtmlString += '</div>';

		/**
   * Добавляет строку минут в таблицу
   * @param   {object} mins Массив пар (Минуты:День,Id:Часы)
   * @returns {string} Строковое представление в таблице
   */
		function getMinHtmlString(mins) {
			var minsHtmlString = "";
			for (var min in mins) {
				if (minMap[min] == undefined) continue;
				minsHtmlString += "<div  class=\"timetable__min " + getDayClassName(mins[min]) + "\">\n\t\t\t\t\t\t\t\t" + mins.id + ":" + minMap[min] + "\n\t\t\t\t\t\t\t</div>";
			}
			return minsHtmlString;
			/**
    * Добавляет класс дня недели
    * @param   {string} tableDayName Название дня недели в таблице exel
    * @returns {string}   Класс дня недели
    */
			function getDayClassName(tableDayName) {
				var daysInTable = ['Su', 'Mo', 'Tu', 'Te', 'Th', 'Fr', 'Sa', 'All'];
				var daysExtendtion = [].concat(_toConsumableArray(days), ["All"]);
				if (daysInTable.indexOf(tableDayName) === undefined) {
					console.error("tableDayName is undefined, \n\t\t\t\t\t\t\t\t\tcur: " + tableDayName + " \n\t\t\t\t\t\t\t\t\texp: " + daysExtendtion + "\n\t\t\t\t\t\t\t\t\t");
					return ' ';
				}
				return ' day-' + daysExtendtion[daysInTable.indexOf(tableDayName)];
			}
		}

		$(timetableRowClass).append(timetableRowHtmlString);
	}
	setLanguage("ru");
});
'use strict';

var days = ['sunday', 'monday', 'tuesday', 'tednesday', 'thursday', 'friday', 'saturday'];
/**
 * Установка языка сайта
 * @param {string} lang Пользовательская локаль
 */
function setLanguage(lang) {
	$.getJSON('lang/' + lang + '.json', function (data) {
		$.each(data, function (key, val) {
			$('[name = ' + key + ']').html(val);
		});
	});
}
$(function () {
	// Установка времени показа заставки
	$(".preloader").delay(1000).fadeOut("slow");

	// Отрисовка боковой панели 
	(function () {
		var strDOM = "";
		days.forEach(function (day, i) {
			strDOM += '<div class="panel--button panel--button-' + i + ' day-' + day + '">\n\t\t\t\t\t\t<span name="' + day + '"></span>\n\t\t\t\t\t</div>';
		});
		$(".panel").append(strDOM);
	})();
});
/**
 * Модуль установки событий работы с свичём
 */
$(function () {
	$(".russian").button('toggle');
	$(".russian").click(function () {
		setLanguage("ru");
		$('#map').attr('lang', 'ru');
	});
	$(".russian").click();
	$(".english").click(function () {
		setLanguage("en");
		$('#map').attr('lang', 'en');
	});
	$(".lang").addClass("btn-group-vertical");
	$(".lang").removeClass("btn-group");
	$(".to_technopolis").button('toggle');
	$(".to_technopolis").click(function () {
		$("#route0").css("visibility", "visible");
		$("#route0").css("position", "initial");
		$("#route1").css("visibility", "hidden");
		$("#route1").css("position", "absolute");
	});
	$(".from_technopolis").click(function () {
		$("#route0").css("visibility", "hidden");
		$("#route0").css("position", "absolute");
		$("#route1").css("visibility", "visible");
		$("#route1").css("position", "initial");
	});
});
/**
 * Модуль работы с датой
 */
$(function () {
	/**
  * Установка текущей даты, поиск следующей даты в таблице
  */
	function setDate() {
		var options = {
			hour: 'numeric',
			minute: 'numeric'
		};
		function getWeekDay(date) {
			return days[date.getDay()];
		}
		var date = new Date();
		$(".day").attr('name', getWeekDay(date));
		$("time.current-time").html(date.toLocaleString('ru', options) + ' ');

		Number.prototype.div = function (by) {
			return (this - this % by) / by;
		};
		var minTmp = date.getMinutes();
		minTmp = minTmp >= 10 ? minTmp.div(10) + 1 + "0" : "10";
		$('.timetable__min:contains(' + date.getHours() + ':' + minTmp + ')').css('border', '2px solid green');
	}
	setDate();
	setInterval(setDate, 9000);
});